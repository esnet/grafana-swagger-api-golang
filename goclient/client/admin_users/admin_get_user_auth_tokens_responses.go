// Code generated by go-swagger; DO NOT EDIT.

package admin_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// AdminGetUserAuthTokensReader is a Reader for the AdminGetUserAuthTokens structure.
type AdminGetUserAuthTokensReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminGetUserAuthTokensReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminGetUserAuthTokensOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAdminGetUserAuthTokensUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminGetUserAuthTokensForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminGetUserAuthTokensInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminGetUserAuthTokensOK creates a AdminGetUserAuthTokensOK with default headers values
func NewAdminGetUserAuthTokensOK() *AdminGetUserAuthTokensOK {
	return &AdminGetUserAuthTokensOK{}
}

/*
AdminGetUserAuthTokensOK describes a response with status code 200, with default header values.

(empty)
*/
type AdminGetUserAuthTokensOK struct {
	Payload []*models.UserToken
}

func (o *AdminGetUserAuthTokensOK) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user_id}/auth-tokens][%d] adminGetUserAuthTokensOK  %+v", 200, o.Payload)
}
func (o *AdminGetUserAuthTokensOK) GetPayload() []*models.UserToken {
	return o.Payload
}

func (o *AdminGetUserAuthTokensOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetUserAuthTokensUnauthorized creates a AdminGetUserAuthTokensUnauthorized with default headers values
func NewAdminGetUserAuthTokensUnauthorized() *AdminGetUserAuthTokensUnauthorized {
	return &AdminGetUserAuthTokensUnauthorized{}
}

/*
AdminGetUserAuthTokensUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type AdminGetUserAuthTokensUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminGetUserAuthTokensUnauthorized) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user_id}/auth-tokens][%d] adminGetUserAuthTokensUnauthorized  %+v", 401, o.Payload)
}
func (o *AdminGetUserAuthTokensUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminGetUserAuthTokensUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetUserAuthTokensForbidden creates a AdminGetUserAuthTokensForbidden with default headers values
func NewAdminGetUserAuthTokensForbidden() *AdminGetUserAuthTokensForbidden {
	return &AdminGetUserAuthTokensForbidden{}
}

/*
AdminGetUserAuthTokensForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type AdminGetUserAuthTokensForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminGetUserAuthTokensForbidden) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user_id}/auth-tokens][%d] adminGetUserAuthTokensForbidden  %+v", 403, o.Payload)
}
func (o *AdminGetUserAuthTokensForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminGetUserAuthTokensForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminGetUserAuthTokensInternalServerError creates a AdminGetUserAuthTokensInternalServerError with default headers values
func NewAdminGetUserAuthTokensInternalServerError() *AdminGetUserAuthTokensInternalServerError {
	return &AdminGetUserAuthTokensInternalServerError{}
}

/*
AdminGetUserAuthTokensInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type AdminGetUserAuthTokensInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminGetUserAuthTokensInternalServerError) Error() string {
	return fmt.Sprintf("[GET /admin/users/{user_id}/auth-tokens][%d] adminGetUserAuthTokensInternalServerError  %+v", 500, o.Payload)
}
func (o *AdminGetUserAuthTokensInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminGetUserAuthTokensInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
