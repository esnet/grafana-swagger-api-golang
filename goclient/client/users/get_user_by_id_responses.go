// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetUserByIDReader is a Reader for the GetUserByID structure.
type GetUserByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserByIDOK creates a GetUserByIDOK with default headers values
func NewGetUserByIDOK() *GetUserByIDOK {
	return &GetUserByIDOK{}
}

/*
GetUserByIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetUserByIDOK struct {
	Payload *models.UserProfileDTO
}

func (o *GetUserByIDOK) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUserByIdOK  %+v", 200, o.Payload)
}
func (o *GetUserByIDOK) GetPayload() *models.UserProfileDTO {
	return o.Payload
}

func (o *GetUserByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserProfileDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDUnauthorized creates a GetUserByIDUnauthorized with default headers values
func NewGetUserByIDUnauthorized() *GetUserByIDUnauthorized {
	return &GetUserByIDUnauthorized{}
}

/*
GetUserByIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetUserByIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUserByIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetUserByIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDForbidden creates a GetUserByIDForbidden with default headers values
func NewGetUserByIDForbidden() *GetUserByIDForbidden {
	return &GetUserByIDForbidden{}
}

/*
GetUserByIDForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetUserByIDForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUserByIdForbidden  %+v", 403, o.Payload)
}
func (o *GetUserByIDForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDNotFound creates a GetUserByIDNotFound with default headers values
func NewGetUserByIDNotFound() *GetUserByIDNotFound {
	return &GetUserByIDNotFound{}
}

/*
GetUserByIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetUserByIDNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUserByIdNotFound  %+v", 404, o.Payload)
}
func (o *GetUserByIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByIDInternalServerError creates a GetUserByIDInternalServerError with default headers values
func NewGetUserByIDInternalServerError() *GetUserByIDInternalServerError {
	return &GetUserByIDInternalServerError{}
}

/*
GetUserByIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetUserByIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /users/{user_id}][%d] getUserByIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUserByIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
