// Code generated by go-swagger; DO NOT EDIT.

package datasources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// DatasourceProxyDELETEcallsReader is a Reader for the DatasourceProxyDELETEcalls structure.
type DatasourceProxyDELETEcallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DatasourceProxyDELETEcallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewDatasourceProxyDELETEcallsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDatasourceProxyDELETEcallsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDatasourceProxyDELETEcallsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDatasourceProxyDELETEcallsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDatasourceProxyDELETEcallsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDatasourceProxyDELETEcallsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDatasourceProxyDELETEcallsAccepted creates a DatasourceProxyDELETEcallsAccepted with default headers values
func NewDatasourceProxyDELETEcallsAccepted() *DatasourceProxyDELETEcallsAccepted {
	return &DatasourceProxyDELETEcallsAccepted{}
}

/*
DatasourceProxyDELETEcallsAccepted describes a response with status code 202, with default header values.

(empty)
*/
type DatasourceProxyDELETEcallsAccepted struct {
}

func (o *DatasourceProxyDELETEcallsAccepted) Error() string {
	return fmt.Sprintf("[DELETE /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyDELETEcallsAccepted ", 202)
}

func (o *DatasourceProxyDELETEcallsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDatasourceProxyDELETEcallsBadRequest creates a DatasourceProxyDELETEcallsBadRequest with default headers values
func NewDatasourceProxyDELETEcallsBadRequest() *DatasourceProxyDELETEcallsBadRequest {
	return &DatasourceProxyDELETEcallsBadRequest{}
}

/*
DatasourceProxyDELETEcallsBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type DatasourceProxyDELETEcallsBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyDELETEcallsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyDELETEcallsBadRequest  %+v", 400, o.Payload)
}
func (o *DatasourceProxyDELETEcallsBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyDELETEcallsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyDELETEcallsUnauthorized creates a DatasourceProxyDELETEcallsUnauthorized with default headers values
func NewDatasourceProxyDELETEcallsUnauthorized() *DatasourceProxyDELETEcallsUnauthorized {
	return &DatasourceProxyDELETEcallsUnauthorized{}
}

/*
DatasourceProxyDELETEcallsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type DatasourceProxyDELETEcallsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyDELETEcallsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyDELETEcallsUnauthorized  %+v", 401, o.Payload)
}
func (o *DatasourceProxyDELETEcallsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyDELETEcallsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyDELETEcallsForbidden creates a DatasourceProxyDELETEcallsForbidden with default headers values
func NewDatasourceProxyDELETEcallsForbidden() *DatasourceProxyDELETEcallsForbidden {
	return &DatasourceProxyDELETEcallsForbidden{}
}

/*
DatasourceProxyDELETEcallsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type DatasourceProxyDELETEcallsForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyDELETEcallsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyDELETEcallsForbidden  %+v", 403, o.Payload)
}
func (o *DatasourceProxyDELETEcallsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyDELETEcallsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyDELETEcallsNotFound creates a DatasourceProxyDELETEcallsNotFound with default headers values
func NewDatasourceProxyDELETEcallsNotFound() *DatasourceProxyDELETEcallsNotFound {
	return &DatasourceProxyDELETEcallsNotFound{}
}

/*
DatasourceProxyDELETEcallsNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type DatasourceProxyDELETEcallsNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyDELETEcallsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyDELETEcallsNotFound  %+v", 404, o.Payload)
}
func (o *DatasourceProxyDELETEcallsNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyDELETEcallsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyDELETEcallsInternalServerError creates a DatasourceProxyDELETEcallsInternalServerError with default headers values
func NewDatasourceProxyDELETEcallsInternalServerError() *DatasourceProxyDELETEcallsInternalServerError {
	return &DatasourceProxyDELETEcallsInternalServerError{}
}

/*
DatasourceProxyDELETEcallsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type DatasourceProxyDELETEcallsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyDELETEcallsInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyDELETEcallsInternalServerError  %+v", 500, o.Payload)
}
func (o *DatasourceProxyDELETEcallsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyDELETEcallsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
