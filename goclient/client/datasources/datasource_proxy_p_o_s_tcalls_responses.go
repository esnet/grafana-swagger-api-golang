// Code generated by go-swagger; DO NOT EDIT.

package datasources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// DatasourceProxyPOSTcallsReader is a Reader for the DatasourceProxyPOSTcalls structure.
type DatasourceProxyPOSTcallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DatasourceProxyPOSTcallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDatasourceProxyPOSTcallsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewDatasourceProxyPOSTcallsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDatasourceProxyPOSTcallsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDatasourceProxyPOSTcallsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDatasourceProxyPOSTcallsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDatasourceProxyPOSTcallsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDatasourceProxyPOSTcallsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDatasourceProxyPOSTcallsCreated creates a DatasourceProxyPOSTcallsCreated with default headers values
func NewDatasourceProxyPOSTcallsCreated() *DatasourceProxyPOSTcallsCreated {
	return &DatasourceProxyPOSTcallsCreated{}
}

/*
DatasourceProxyPOSTcallsCreated describes a response with status code 201, with default header values.

(empty)
*/
type DatasourceProxyPOSTcallsCreated struct {
}

func (o *DatasourceProxyPOSTcallsCreated) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsCreated ", 201)
}

func (o *DatasourceProxyPOSTcallsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDatasourceProxyPOSTcallsAccepted creates a DatasourceProxyPOSTcallsAccepted with default headers values
func NewDatasourceProxyPOSTcallsAccepted() *DatasourceProxyPOSTcallsAccepted {
	return &DatasourceProxyPOSTcallsAccepted{}
}

/*
DatasourceProxyPOSTcallsAccepted describes a response with status code 202, with default header values.

(empty)
*/
type DatasourceProxyPOSTcallsAccepted struct {
}

func (o *DatasourceProxyPOSTcallsAccepted) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsAccepted ", 202)
}

func (o *DatasourceProxyPOSTcallsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDatasourceProxyPOSTcallsBadRequest creates a DatasourceProxyPOSTcallsBadRequest with default headers values
func NewDatasourceProxyPOSTcallsBadRequest() *DatasourceProxyPOSTcallsBadRequest {
	return &DatasourceProxyPOSTcallsBadRequest{}
}

/*
DatasourceProxyPOSTcallsBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type DatasourceProxyPOSTcallsBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyPOSTcallsBadRequest) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsBadRequest  %+v", 400, o.Payload)
}
func (o *DatasourceProxyPOSTcallsBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyPOSTcallsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyPOSTcallsUnauthorized creates a DatasourceProxyPOSTcallsUnauthorized with default headers values
func NewDatasourceProxyPOSTcallsUnauthorized() *DatasourceProxyPOSTcallsUnauthorized {
	return &DatasourceProxyPOSTcallsUnauthorized{}
}

/*
DatasourceProxyPOSTcallsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type DatasourceProxyPOSTcallsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyPOSTcallsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsUnauthorized  %+v", 401, o.Payload)
}
func (o *DatasourceProxyPOSTcallsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyPOSTcallsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyPOSTcallsForbidden creates a DatasourceProxyPOSTcallsForbidden with default headers values
func NewDatasourceProxyPOSTcallsForbidden() *DatasourceProxyPOSTcallsForbidden {
	return &DatasourceProxyPOSTcallsForbidden{}
}

/*
DatasourceProxyPOSTcallsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type DatasourceProxyPOSTcallsForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyPOSTcallsForbidden) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsForbidden  %+v", 403, o.Payload)
}
func (o *DatasourceProxyPOSTcallsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyPOSTcallsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyPOSTcallsNotFound creates a DatasourceProxyPOSTcallsNotFound with default headers values
func NewDatasourceProxyPOSTcallsNotFound() *DatasourceProxyPOSTcallsNotFound {
	return &DatasourceProxyPOSTcallsNotFound{}
}

/*
DatasourceProxyPOSTcallsNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type DatasourceProxyPOSTcallsNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyPOSTcallsNotFound) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsNotFound  %+v", 404, o.Payload)
}
func (o *DatasourceProxyPOSTcallsNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyPOSTcallsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDatasourceProxyPOSTcallsInternalServerError creates a DatasourceProxyPOSTcallsInternalServerError with default headers values
func NewDatasourceProxyPOSTcallsInternalServerError() *DatasourceProxyPOSTcallsInternalServerError {
	return &DatasourceProxyPOSTcallsInternalServerError{}
}

/*
DatasourceProxyPOSTcallsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type DatasourceProxyPOSTcallsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *DatasourceProxyPOSTcallsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /datasources/proxy/{id}/{datasource_proxy_route}][%d] datasourceProxyPOSTcallsInternalServerError  %+v", 500, o.Payload)
}
func (o *DatasourceProxyPOSTcallsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *DatasourceProxyPOSTcallsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
