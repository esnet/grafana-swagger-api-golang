// Code generated by go-swagger; DO NOT EDIT.

package user_preferences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// GetUserPreferencesReader is a Reader for the GetUserPreferences structure.
type GetUserPreferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserPreferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserPreferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserPreferencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserPreferencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserPreferencesOK creates a GetUserPreferencesOK with default headers values
func NewGetUserPreferencesOK() *GetUserPreferencesOK {
	return &GetUserPreferencesOK{}
}

/*
GetUserPreferencesOK describes a response with status code 200, with default header values.

(empty)
*/
type GetUserPreferencesOK struct {
	Payload *models.Prefs
}

func (o *GetUserPreferencesOK) Error() string {
	return fmt.Sprintf("[GET /user/preferences][%d] getUserPreferencesOK  %+v", 200, o.Payload)
}
func (o *GetUserPreferencesOK) GetPayload() *models.Prefs {
	return o.Payload
}

func (o *GetUserPreferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Prefs)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPreferencesUnauthorized creates a GetUserPreferencesUnauthorized with default headers values
func NewGetUserPreferencesUnauthorized() *GetUserPreferencesUnauthorized {
	return &GetUserPreferencesUnauthorized{}
}

/*
GetUserPreferencesUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetUserPreferencesUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserPreferencesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/preferences][%d] getUserPreferencesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetUserPreferencesUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserPreferencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserPreferencesInternalServerError creates a GetUserPreferencesInternalServerError with default headers values
func NewGetUserPreferencesInternalServerError() *GetUserPreferencesInternalServerError {
	return &GetUserPreferencesInternalServerError{}
}

/*
GetUserPreferencesInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetUserPreferencesInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserPreferencesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/preferences][%d] getUserPreferencesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUserPreferencesInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserPreferencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
