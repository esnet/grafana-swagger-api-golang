// Code generated by go-swagger; DO NOT EDIT.

package licensing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetCustomPermissionsReportReader is a Reader for the GetCustomPermissionsReport structure.
type GetCustomPermissionsReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomPermissionsReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomPermissionsReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetCustomPermissionsReportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCustomPermissionsReportOK creates a GetCustomPermissionsReportOK with default headers values
func NewGetCustomPermissionsReportOK() *GetCustomPermissionsReportOK {
	return &GetCustomPermissionsReportOK{}
}

/*
GetCustomPermissionsReportOK describes a response with status code 200, with default header values.

(empty)
*/
type GetCustomPermissionsReportOK struct {
	Payload []*models.CustomPermissionsRecordDTO
}

func (o *GetCustomPermissionsReportOK) Error() string {
	return fmt.Sprintf("[GET /licensing/custom-permissions][%d] getCustomPermissionsReportOK  %+v", 200, o.Payload)
}
func (o *GetCustomPermissionsReportOK) GetPayload() []*models.CustomPermissionsRecordDTO {
	return o.Payload
}

func (o *GetCustomPermissionsReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomPermissionsReportInternalServerError creates a GetCustomPermissionsReportInternalServerError with default headers values
func NewGetCustomPermissionsReportInternalServerError() *GetCustomPermissionsReportInternalServerError {
	return &GetCustomPermissionsReportInternalServerError{}
}

/*
GetCustomPermissionsReportInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetCustomPermissionsReportInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetCustomPermissionsReportInternalServerError) Error() string {
	return fmt.Sprintf("[GET /licensing/custom-permissions][%d] getCustomPermissionsReportInternalServerError  %+v", 500, o.Payload)
}
func (o *GetCustomPermissionsReportInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetCustomPermissionsReportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
