// Code generated by go-swagger; DO NOT EDIT.

package reports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetReportSettingsReader is a Reader for the GetReportSettings structure.
type GetReportSettingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportSettingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReportSettingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReportSettingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReportSettingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetReportSettingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetReportSettingsOK creates a GetReportSettingsOK with default headers values
func NewGetReportSettingsOK() *GetReportSettingsOK {
	return &GetReportSettingsOK{}
}

/*
GetReportSettingsOK describes a response with status code 200, with default header values.

(empty)
*/
type GetReportSettingsOK struct {
	Payload *models.SettingsDTO
}

func (o *GetReportSettingsOK) Error() string {
	return fmt.Sprintf("[GET /reports/settings][%d] getReportSettingsOK  %+v", 200, o.Payload)
}
func (o *GetReportSettingsOK) GetPayload() *models.SettingsDTO {
	return o.Payload
}

func (o *GetReportSettingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SettingsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportSettingsUnauthorized creates a GetReportSettingsUnauthorized with default headers values
func NewGetReportSettingsUnauthorized() *GetReportSettingsUnauthorized {
	return &GetReportSettingsUnauthorized{}
}

/*
GetReportSettingsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetReportSettingsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetReportSettingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /reports/settings][%d] getReportSettingsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetReportSettingsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetReportSettingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportSettingsForbidden creates a GetReportSettingsForbidden with default headers values
func NewGetReportSettingsForbidden() *GetReportSettingsForbidden {
	return &GetReportSettingsForbidden{}
}

/*
GetReportSettingsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetReportSettingsForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetReportSettingsForbidden) Error() string {
	return fmt.Sprintf("[GET /reports/settings][%d] getReportSettingsForbidden  %+v", 403, o.Payload)
}
func (o *GetReportSettingsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetReportSettingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportSettingsInternalServerError creates a GetReportSettingsInternalServerError with default headers values
func NewGetReportSettingsInternalServerError() *GetReportSettingsInternalServerError {
	return &GetReportSettingsInternalServerError{}
}

/*
GetReportSettingsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetReportSettingsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetReportSettingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /reports/settings][%d] getReportSettingsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetReportSettingsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetReportSettingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
