// Code generated by go-swagger; DO NOT EDIT.

package recording_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// CreateRecordingRuleWriteTargetReader is a Reader for the CreateRecordingRuleWriteTarget structure.
type CreateRecordingRuleWriteTargetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRecordingRuleWriteTargetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRecordingRuleWriteTargetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateRecordingRuleWriteTargetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateRecordingRuleWriteTargetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateRecordingRuleWriteTargetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateRecordingRuleWriteTargetUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateRecordingRuleWriteTargetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateRecordingRuleWriteTargetOK creates a CreateRecordingRuleWriteTargetOK with default headers values
func NewCreateRecordingRuleWriteTargetOK() *CreateRecordingRuleWriteTargetOK {
	return &CreateRecordingRuleWriteTargetOK{}
}

/*
CreateRecordingRuleWriteTargetOK describes a response with status code 200, with default header values.

(empty)
*/
type CreateRecordingRuleWriteTargetOK struct {
	Payload *models.PrometheusRemoteWriteTargetJSON
}

func (o *CreateRecordingRuleWriteTargetOK) Error() string {
	return fmt.Sprintf("[POST /recording-rules/writer][%d] createRecordingRuleWriteTargetOK  %+v", 200, o.Payload)
}
func (o *CreateRecordingRuleWriteTargetOK) GetPayload() *models.PrometheusRemoteWriteTargetJSON {
	return o.Payload
}

func (o *CreateRecordingRuleWriteTargetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrometheusRemoteWriteTargetJSON)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRecordingRuleWriteTargetUnauthorized creates a CreateRecordingRuleWriteTargetUnauthorized with default headers values
func NewCreateRecordingRuleWriteTargetUnauthorized() *CreateRecordingRuleWriteTargetUnauthorized {
	return &CreateRecordingRuleWriteTargetUnauthorized{}
}

/*
CreateRecordingRuleWriteTargetUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type CreateRecordingRuleWriteTargetUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateRecordingRuleWriteTargetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /recording-rules/writer][%d] createRecordingRuleWriteTargetUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateRecordingRuleWriteTargetUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateRecordingRuleWriteTargetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRecordingRuleWriteTargetForbidden creates a CreateRecordingRuleWriteTargetForbidden with default headers values
func NewCreateRecordingRuleWriteTargetForbidden() *CreateRecordingRuleWriteTargetForbidden {
	return &CreateRecordingRuleWriteTargetForbidden{}
}

/*
CreateRecordingRuleWriteTargetForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type CreateRecordingRuleWriteTargetForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateRecordingRuleWriteTargetForbidden) Error() string {
	return fmt.Sprintf("[POST /recording-rules/writer][%d] createRecordingRuleWriteTargetForbidden  %+v", 403, o.Payload)
}
func (o *CreateRecordingRuleWriteTargetForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateRecordingRuleWriteTargetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRecordingRuleWriteTargetNotFound creates a CreateRecordingRuleWriteTargetNotFound with default headers values
func NewCreateRecordingRuleWriteTargetNotFound() *CreateRecordingRuleWriteTargetNotFound {
	return &CreateRecordingRuleWriteTargetNotFound{}
}

/*
CreateRecordingRuleWriteTargetNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type CreateRecordingRuleWriteTargetNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateRecordingRuleWriteTargetNotFound) Error() string {
	return fmt.Sprintf("[POST /recording-rules/writer][%d] createRecordingRuleWriteTargetNotFound  %+v", 404, o.Payload)
}
func (o *CreateRecordingRuleWriteTargetNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateRecordingRuleWriteTargetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRecordingRuleWriteTargetUnprocessableEntity creates a CreateRecordingRuleWriteTargetUnprocessableEntity with default headers values
func NewCreateRecordingRuleWriteTargetUnprocessableEntity() *CreateRecordingRuleWriteTargetUnprocessableEntity {
	return &CreateRecordingRuleWriteTargetUnprocessableEntity{}
}

/*
CreateRecordingRuleWriteTargetUnprocessableEntity describes a response with status code 422, with default header values.

UnprocessableEntityError
*/
type CreateRecordingRuleWriteTargetUnprocessableEntity struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateRecordingRuleWriteTargetUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /recording-rules/writer][%d] createRecordingRuleWriteTargetUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *CreateRecordingRuleWriteTargetUnprocessableEntity) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateRecordingRuleWriteTargetUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRecordingRuleWriteTargetInternalServerError creates a CreateRecordingRuleWriteTargetInternalServerError with default headers values
func NewCreateRecordingRuleWriteTargetInternalServerError() *CreateRecordingRuleWriteTargetInternalServerError {
	return &CreateRecordingRuleWriteTargetInternalServerError{}
}

/*
CreateRecordingRuleWriteTargetInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type CreateRecordingRuleWriteTargetInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateRecordingRuleWriteTargetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /recording-rules/writer][%d] createRecordingRuleWriteTargetInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateRecordingRuleWriteTargetInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateRecordingRuleWriteTargetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
