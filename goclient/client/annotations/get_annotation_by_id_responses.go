// Code generated by go-swagger; DO NOT EDIT.

package annotations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetAnnotationByIDReader is a Reader for the GetAnnotationByID structure.
type GetAnnotationByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAnnotationByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAnnotationByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAnnotationByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAnnotationByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAnnotationByIDOK creates a GetAnnotationByIDOK with default headers values
func NewGetAnnotationByIDOK() *GetAnnotationByIDOK {
	return &GetAnnotationByIDOK{}
}

/*
GetAnnotationByIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetAnnotationByIDOK struct {
	Payload *models.ItemDTO
}

func (o *GetAnnotationByIDOK) Error() string {
	return fmt.Sprintf("[GET /annotations/{annotation_id}][%d] getAnnotationByIdOK  %+v", 200, o.Payload)
}
func (o *GetAnnotationByIDOK) GetPayload() *models.ItemDTO {
	return o.Payload
}

func (o *GetAnnotationByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ItemDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnnotationByIDUnauthorized creates a GetAnnotationByIDUnauthorized with default headers values
func NewGetAnnotationByIDUnauthorized() *GetAnnotationByIDUnauthorized {
	return &GetAnnotationByIDUnauthorized{}
}

/*
GetAnnotationByIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetAnnotationByIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAnnotationByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /annotations/{annotation_id}][%d] getAnnotationByIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAnnotationByIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAnnotationByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAnnotationByIDInternalServerError creates a GetAnnotationByIDInternalServerError with default headers values
func NewGetAnnotationByIDInternalServerError() *GetAnnotationByIDInternalServerError {
	return &GetAnnotationByIDInternalServerError{}
}

/*
GetAnnotationByIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetAnnotationByIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAnnotationByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /annotations/{annotation_id}][%d] getAnnotationByIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAnnotationByIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAnnotationByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
