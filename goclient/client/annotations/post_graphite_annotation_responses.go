// Code generated by go-swagger; DO NOT EDIT.

package annotations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// PostGraphiteAnnotationReader is a Reader for the PostGraphiteAnnotation structure.
type PostGraphiteAnnotationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGraphiteAnnotationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostGraphiteAnnotationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGraphiteAnnotationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostGraphiteAnnotationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostGraphiteAnnotationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostGraphiteAnnotationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGraphiteAnnotationOK creates a PostGraphiteAnnotationOK with default headers values
func NewPostGraphiteAnnotationOK() *PostGraphiteAnnotationOK {
	return &PostGraphiteAnnotationOK{}
}

/*
PostGraphiteAnnotationOK describes a response with status code 200, with default header values.

(empty)
*/
type PostGraphiteAnnotationOK struct {
	Payload *models.PostGraphiteAnnotationOKBody
}

func (o *PostGraphiteAnnotationOK) Error() string {
	return fmt.Sprintf("[POST /annotations/graphite][%d] postGraphiteAnnotationOK  %+v", 200, o.Payload)
}
func (o *PostGraphiteAnnotationOK) GetPayload() *models.PostGraphiteAnnotationOKBody {
	return o.Payload
}

func (o *PostGraphiteAnnotationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostGraphiteAnnotationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGraphiteAnnotationBadRequest creates a PostGraphiteAnnotationBadRequest with default headers values
func NewPostGraphiteAnnotationBadRequest() *PostGraphiteAnnotationBadRequest {
	return &PostGraphiteAnnotationBadRequest{}
}

/*
PostGraphiteAnnotationBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type PostGraphiteAnnotationBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *PostGraphiteAnnotationBadRequest) Error() string {
	return fmt.Sprintf("[POST /annotations/graphite][%d] postGraphiteAnnotationBadRequest  %+v", 400, o.Payload)
}
func (o *PostGraphiteAnnotationBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *PostGraphiteAnnotationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGraphiteAnnotationUnauthorized creates a PostGraphiteAnnotationUnauthorized with default headers values
func NewPostGraphiteAnnotationUnauthorized() *PostGraphiteAnnotationUnauthorized {
	return &PostGraphiteAnnotationUnauthorized{}
}

/*
PostGraphiteAnnotationUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type PostGraphiteAnnotationUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *PostGraphiteAnnotationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /annotations/graphite][%d] postGraphiteAnnotationUnauthorized  %+v", 401, o.Payload)
}
func (o *PostGraphiteAnnotationUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *PostGraphiteAnnotationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGraphiteAnnotationForbidden creates a PostGraphiteAnnotationForbidden with default headers values
func NewPostGraphiteAnnotationForbidden() *PostGraphiteAnnotationForbidden {
	return &PostGraphiteAnnotationForbidden{}
}

/*
PostGraphiteAnnotationForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type PostGraphiteAnnotationForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *PostGraphiteAnnotationForbidden) Error() string {
	return fmt.Sprintf("[POST /annotations/graphite][%d] postGraphiteAnnotationForbidden  %+v", 403, o.Payload)
}
func (o *PostGraphiteAnnotationForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *PostGraphiteAnnotationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGraphiteAnnotationInternalServerError creates a PostGraphiteAnnotationInternalServerError with default headers values
func NewPostGraphiteAnnotationInternalServerError() *PostGraphiteAnnotationInternalServerError {
	return &PostGraphiteAnnotationInternalServerError{}
}

/*
PostGraphiteAnnotationInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type PostGraphiteAnnotationInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *PostGraphiteAnnotationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /annotations/graphite][%d] postGraphiteAnnotationInternalServerError  %+v", 500, o.Payload)
}
func (o *PostGraphiteAnnotationInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *PostGraphiteAnnotationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
