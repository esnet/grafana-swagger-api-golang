// Code generated by go-swagger; DO NOT EDIT.

package orgs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// UpdateOrgQuotaReader is a Reader for the UpdateOrgQuota structure.
type UpdateOrgQuotaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrgQuotaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOrgQuotaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateOrgQuotaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrgQuotaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOrgQuotaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOrgQuotaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateOrgQuotaOK creates a UpdateOrgQuotaOK with default headers values
func NewUpdateOrgQuotaOK() *UpdateOrgQuotaOK {
	return &UpdateOrgQuotaOK{}
}

/*
UpdateOrgQuotaOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type UpdateOrgQuotaOK struct {
	Payload *models.SuccessResponseBody
}

func (o *UpdateOrgQuotaOK) Error() string {
	return fmt.Sprintf("[PUT /orgs/{org_id}/quotas/{quota_target}][%d] updateOrgQuotaOK  %+v", 200, o.Payload)
}
func (o *UpdateOrgQuotaOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *UpdateOrgQuotaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgQuotaUnauthorized creates a UpdateOrgQuotaUnauthorized with default headers values
func NewUpdateOrgQuotaUnauthorized() *UpdateOrgQuotaUnauthorized {
	return &UpdateOrgQuotaUnauthorized{}
}

/*
UpdateOrgQuotaUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type UpdateOrgQuotaUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgQuotaUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /orgs/{org_id}/quotas/{quota_target}][%d] updateOrgQuotaUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateOrgQuotaUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgQuotaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgQuotaForbidden creates a UpdateOrgQuotaForbidden with default headers values
func NewUpdateOrgQuotaForbidden() *UpdateOrgQuotaForbidden {
	return &UpdateOrgQuotaForbidden{}
}

/*
UpdateOrgQuotaForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type UpdateOrgQuotaForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgQuotaForbidden) Error() string {
	return fmt.Sprintf("[PUT /orgs/{org_id}/quotas/{quota_target}][%d] updateOrgQuotaForbidden  %+v", 403, o.Payload)
}
func (o *UpdateOrgQuotaForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgQuotaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgQuotaNotFound creates a UpdateOrgQuotaNotFound with default headers values
func NewUpdateOrgQuotaNotFound() *UpdateOrgQuotaNotFound {
	return &UpdateOrgQuotaNotFound{}
}

/*
UpdateOrgQuotaNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type UpdateOrgQuotaNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgQuotaNotFound) Error() string {
	return fmt.Sprintf("[PUT /orgs/{org_id}/quotas/{quota_target}][%d] updateOrgQuotaNotFound  %+v", 404, o.Payload)
}
func (o *UpdateOrgQuotaNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgQuotaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgQuotaInternalServerError creates a UpdateOrgQuotaInternalServerError with default headers values
func NewUpdateOrgQuotaInternalServerError() *UpdateOrgQuotaInternalServerError {
	return &UpdateOrgQuotaInternalServerError{}
}

/*
UpdateOrgQuotaInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type UpdateOrgQuotaInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgQuotaInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /orgs/{org_id}/quotas/{quota_target}][%d] updateOrgQuotaInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateOrgQuotaInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgQuotaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
