// Code generated by go-swagger; DO NOT EDIT.

package orgs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// SearchOrgUsersReader is a Reader for the SearchOrgUsers structure.
type SearchOrgUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchOrgUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchOrgUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSearchOrgUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchOrgUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchOrgUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchOrgUsersOK creates a SearchOrgUsersOK with default headers values
func NewSearchOrgUsersOK() *SearchOrgUsersOK {
	return &SearchOrgUsersOK{}
}

/*
SearchOrgUsersOK describes a response with status code 200, with default header values.

(empty)
*/
type SearchOrgUsersOK struct {
	Payload *models.SearchOrgUsersQueryResult
}

func (o *SearchOrgUsersOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{org_id}/users/search][%d] searchOrgUsersOK  %+v", 200, o.Payload)
}
func (o *SearchOrgUsersOK) GetPayload() *models.SearchOrgUsersQueryResult {
	return o.Payload
}

func (o *SearchOrgUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchOrgUsersQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrgUsersUnauthorized creates a SearchOrgUsersUnauthorized with default headers values
func NewSearchOrgUsersUnauthorized() *SearchOrgUsersUnauthorized {
	return &SearchOrgUsersUnauthorized{}
}

/*
SearchOrgUsersUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type SearchOrgUsersUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchOrgUsersUnauthorized) Error() string {
	return fmt.Sprintf("[GET /orgs/{org_id}/users/search][%d] searchOrgUsersUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchOrgUsersUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchOrgUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrgUsersForbidden creates a SearchOrgUsersForbidden with default headers values
func NewSearchOrgUsersForbidden() *SearchOrgUsersForbidden {
	return &SearchOrgUsersForbidden{}
}

/*
SearchOrgUsersForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type SearchOrgUsersForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchOrgUsersForbidden) Error() string {
	return fmt.Sprintf("[GET /orgs/{org_id}/users/search][%d] searchOrgUsersForbidden  %+v", 403, o.Payload)
}
func (o *SearchOrgUsersForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchOrgUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchOrgUsersInternalServerError creates a SearchOrgUsersInternalServerError with default headers values
func NewSearchOrgUsersInternalServerError() *SearchOrgUsersInternalServerError {
	return &SearchOrgUsersInternalServerError{}
}

/*
SearchOrgUsersInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type SearchOrgUsersInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchOrgUsersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orgs/{org_id}/users/search][%d] searchOrgUsersInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchOrgUsersInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchOrgUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
