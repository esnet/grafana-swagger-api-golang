// Code generated by go-swagger; DO NOT EDIT.

package orgs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetOrgByNameReader is a Reader for the GetOrgByName structure.
type GetOrgByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetOrgByNameUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOrgByNameForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOrgByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetOrgByNameOK creates a GetOrgByNameOK with default headers values
func NewGetOrgByNameOK() *GetOrgByNameOK {
	return &GetOrgByNameOK{}
}

/*
GetOrgByNameOK describes a response with status code 200, with default header values.

(empty)
*/
type GetOrgByNameOK struct {
	Payload *models.OrgDetailsDTO
}

func (o *GetOrgByNameOK) Error() string {
	return fmt.Sprintf("[GET /orgs/name/{org_name}][%d] getOrgByNameOK  %+v", 200, o.Payload)
}
func (o *GetOrgByNameOK) GetPayload() *models.OrgDetailsDTO {
	return o.Payload
}

func (o *GetOrgByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OrgDetailsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgByNameUnauthorized creates a GetOrgByNameUnauthorized with default headers values
func NewGetOrgByNameUnauthorized() *GetOrgByNameUnauthorized {
	return &GetOrgByNameUnauthorized{}
}

/*
GetOrgByNameUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetOrgByNameUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetOrgByNameUnauthorized) Error() string {
	return fmt.Sprintf("[GET /orgs/name/{org_name}][%d] getOrgByNameUnauthorized  %+v", 401, o.Payload)
}
func (o *GetOrgByNameUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetOrgByNameUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgByNameForbidden creates a GetOrgByNameForbidden with default headers values
func NewGetOrgByNameForbidden() *GetOrgByNameForbidden {
	return &GetOrgByNameForbidden{}
}

/*
GetOrgByNameForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetOrgByNameForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetOrgByNameForbidden) Error() string {
	return fmt.Sprintf("[GET /orgs/name/{org_name}][%d] getOrgByNameForbidden  %+v", 403, o.Payload)
}
func (o *GetOrgByNameForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetOrgByNameForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgByNameInternalServerError creates a GetOrgByNameInternalServerError with default headers values
func NewGetOrgByNameInternalServerError() *GetOrgByNameInternalServerError {
	return &GetOrgByNameInternalServerError{}
}

/*
GetOrgByNameInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetOrgByNameInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetOrgByNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /orgs/name/{org_name}][%d] getOrgByNameInternalServerError  %+v", 500, o.Payload)
}
func (o *GetOrgByNameInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetOrgByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
