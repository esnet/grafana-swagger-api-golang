// Code generated by go-swagger; DO NOT EDIT.

package org_preferences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// UpdateOrgPreferencesReader is a Reader for the UpdateOrgPreferences structure.
type UpdateOrgPreferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOrgPreferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOrgPreferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOrgPreferencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOrgPreferencesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOrgPreferencesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateOrgPreferencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateOrgPreferencesOK creates a UpdateOrgPreferencesOK with default headers values
func NewUpdateOrgPreferencesOK() *UpdateOrgPreferencesOK {
	return &UpdateOrgPreferencesOK{}
}

/*
UpdateOrgPreferencesOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type UpdateOrgPreferencesOK struct {
	Payload *models.SuccessResponseBody
}

func (o *UpdateOrgPreferencesOK) Error() string {
	return fmt.Sprintf("[PUT /org/preferences][%d] updateOrgPreferencesOK  %+v", 200, o.Payload)
}
func (o *UpdateOrgPreferencesOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *UpdateOrgPreferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgPreferencesBadRequest creates a UpdateOrgPreferencesBadRequest with default headers values
func NewUpdateOrgPreferencesBadRequest() *UpdateOrgPreferencesBadRequest {
	return &UpdateOrgPreferencesBadRequest{}
}

/*
UpdateOrgPreferencesBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type UpdateOrgPreferencesBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgPreferencesBadRequest) Error() string {
	return fmt.Sprintf("[PUT /org/preferences][%d] updateOrgPreferencesBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateOrgPreferencesBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgPreferencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgPreferencesUnauthorized creates a UpdateOrgPreferencesUnauthorized with default headers values
func NewUpdateOrgPreferencesUnauthorized() *UpdateOrgPreferencesUnauthorized {
	return &UpdateOrgPreferencesUnauthorized{}
}

/*
UpdateOrgPreferencesUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type UpdateOrgPreferencesUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgPreferencesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /org/preferences][%d] updateOrgPreferencesUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateOrgPreferencesUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgPreferencesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgPreferencesForbidden creates a UpdateOrgPreferencesForbidden with default headers values
func NewUpdateOrgPreferencesForbidden() *UpdateOrgPreferencesForbidden {
	return &UpdateOrgPreferencesForbidden{}
}

/*
UpdateOrgPreferencesForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type UpdateOrgPreferencesForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgPreferencesForbidden) Error() string {
	return fmt.Sprintf("[PUT /org/preferences][%d] updateOrgPreferencesForbidden  %+v", 403, o.Payload)
}
func (o *UpdateOrgPreferencesForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgPreferencesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOrgPreferencesInternalServerError creates a UpdateOrgPreferencesInternalServerError with default headers values
func NewUpdateOrgPreferencesInternalServerError() *UpdateOrgPreferencesInternalServerError {
	return &UpdateOrgPreferencesInternalServerError{}
}

/*
UpdateOrgPreferencesInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type UpdateOrgPreferencesInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *UpdateOrgPreferencesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /org/preferences][%d] updateOrgPreferencesInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateOrgPreferencesInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *UpdateOrgPreferencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
