// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// SearchTeamsReader is a Reader for the SearchTeams structure.
type SearchTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchTeamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSearchTeamsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchTeamsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchTeamsOK creates a SearchTeamsOK with default headers values
func NewSearchTeamsOK() *SearchTeamsOK {
	return &SearchTeamsOK{}
}

/*
SearchTeamsOK describes a response with status code 200, with default header values.

(empty)
*/
type SearchTeamsOK struct {
	Payload *models.SearchTeamQueryResult
}

func (o *SearchTeamsOK) Error() string {
	return fmt.Sprintf("[GET /teams/search][%d] searchTeamsOK  %+v", 200, o.Payload)
}
func (o *SearchTeamsOK) GetPayload() *models.SearchTeamQueryResult {
	return o.Payload
}

func (o *SearchTeamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchTeamQueryResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamsUnauthorized creates a SearchTeamsUnauthorized with default headers values
func NewSearchTeamsUnauthorized() *SearchTeamsUnauthorized {
	return &SearchTeamsUnauthorized{}
}

/*
SearchTeamsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type SearchTeamsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchTeamsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /teams/search][%d] searchTeamsUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchTeamsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamsForbidden creates a SearchTeamsForbidden with default headers values
func NewSearchTeamsForbidden() *SearchTeamsForbidden {
	return &SearchTeamsForbidden{}
}

/*
SearchTeamsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type SearchTeamsForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchTeamsForbidden) Error() string {
	return fmt.Sprintf("[GET /teams/search][%d] searchTeamsForbidden  %+v", 403, o.Payload)
}
func (o *SearchTeamsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchTeamsInternalServerError creates a SearchTeamsInternalServerError with default headers values
func NewSearchTeamsInternalServerError() *SearchTeamsInternalServerError {
	return &SearchTeamsInternalServerError{}
}

/*
SearchTeamsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type SearchTeamsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchTeamsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /teams/search][%d] searchTeamsInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchTeamsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchTeamsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
