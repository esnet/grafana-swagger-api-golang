// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// AddTeamMemberReader is a Reader for the AddTeamMember structure.
type AddTeamMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTeamMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTeamMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddTeamMemberUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTeamMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddTeamMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTeamMemberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddTeamMemberOK creates a AddTeamMemberOK with default headers values
func NewAddTeamMemberOK() *AddTeamMemberOK {
	return &AddTeamMemberOK{}
}

/*
AddTeamMemberOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type AddTeamMemberOK struct {
	Payload *models.SuccessResponseBody
}

func (o *AddTeamMemberOK) Error() string {
	return fmt.Sprintf("[POST /teams/{team_id}/members][%d] addTeamMemberOK  %+v", 200, o.Payload)
}
func (o *AddTeamMemberOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *AddTeamMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamMemberUnauthorized creates a AddTeamMemberUnauthorized with default headers values
func NewAddTeamMemberUnauthorized() *AddTeamMemberUnauthorized {
	return &AddTeamMemberUnauthorized{}
}

/*
AddTeamMemberUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type AddTeamMemberUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *AddTeamMemberUnauthorized) Error() string {
	return fmt.Sprintf("[POST /teams/{team_id}/members][%d] addTeamMemberUnauthorized  %+v", 401, o.Payload)
}
func (o *AddTeamMemberUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AddTeamMemberUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamMemberForbidden creates a AddTeamMemberForbidden with default headers values
func NewAddTeamMemberForbidden() *AddTeamMemberForbidden {
	return &AddTeamMemberForbidden{}
}

/*
AddTeamMemberForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type AddTeamMemberForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *AddTeamMemberForbidden) Error() string {
	return fmt.Sprintf("[POST /teams/{team_id}/members][%d] addTeamMemberForbidden  %+v", 403, o.Payload)
}
func (o *AddTeamMemberForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AddTeamMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamMemberNotFound creates a AddTeamMemberNotFound with default headers values
func NewAddTeamMemberNotFound() *AddTeamMemberNotFound {
	return &AddTeamMemberNotFound{}
}

/*
AddTeamMemberNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type AddTeamMemberNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *AddTeamMemberNotFound) Error() string {
	return fmt.Sprintf("[POST /teams/{team_id}/members][%d] addTeamMemberNotFound  %+v", 404, o.Payload)
}
func (o *AddTeamMemberNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AddTeamMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTeamMemberInternalServerError creates a AddTeamMemberInternalServerError with default headers values
func NewAddTeamMemberInternalServerError() *AddTeamMemberInternalServerError {
	return &AddTeamMemberInternalServerError{}
}

/*
AddTeamMemberInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type AddTeamMemberInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *AddTeamMemberInternalServerError) Error() string {
	return fmt.Sprintf("[POST /teams/{team_id}/members][%d] addTeamMemberInternalServerError  %+v", 500, o.Payload)
}
func (o *AddTeamMemberInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AddTeamMemberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
