// Code generated by go-swagger; DO NOT EDIT.

package correlations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// CreateCorrelationReader is a Reader for the CreateCorrelation structure.
type CreateCorrelationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCorrelationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCorrelationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCorrelationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateCorrelationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateCorrelationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateCorrelationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCorrelationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateCorrelationOK creates a CreateCorrelationOK with default headers values
func NewCreateCorrelationOK() *CreateCorrelationOK {
	return &CreateCorrelationOK{}
}

/*
CreateCorrelationOK describes a response with status code 200, with default header values.

(empty)
*/
type CreateCorrelationOK struct {
	Payload *models.CreateCorrelationResponseBody
}

func (o *CreateCorrelationOK) Error() string {
	return fmt.Sprintf("[POST /datasources/uid/{sourceUID}/correlations][%d] createCorrelationOK  %+v", 200, o.Payload)
}
func (o *CreateCorrelationOK) GetPayload() *models.CreateCorrelationResponseBody {
	return o.Payload
}

func (o *CreateCorrelationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateCorrelationResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCorrelationBadRequest creates a CreateCorrelationBadRequest with default headers values
func NewCreateCorrelationBadRequest() *CreateCorrelationBadRequest {
	return &CreateCorrelationBadRequest{}
}

/*
CreateCorrelationBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type CreateCorrelationBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateCorrelationBadRequest) Error() string {
	return fmt.Sprintf("[POST /datasources/uid/{sourceUID}/correlations][%d] createCorrelationBadRequest  %+v", 400, o.Payload)
}
func (o *CreateCorrelationBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateCorrelationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCorrelationUnauthorized creates a CreateCorrelationUnauthorized with default headers values
func NewCreateCorrelationUnauthorized() *CreateCorrelationUnauthorized {
	return &CreateCorrelationUnauthorized{}
}

/*
CreateCorrelationUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type CreateCorrelationUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateCorrelationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /datasources/uid/{sourceUID}/correlations][%d] createCorrelationUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateCorrelationUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateCorrelationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCorrelationForbidden creates a CreateCorrelationForbidden with default headers values
func NewCreateCorrelationForbidden() *CreateCorrelationForbidden {
	return &CreateCorrelationForbidden{}
}

/*
CreateCorrelationForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type CreateCorrelationForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateCorrelationForbidden) Error() string {
	return fmt.Sprintf("[POST /datasources/uid/{sourceUID}/correlations][%d] createCorrelationForbidden  %+v", 403, o.Payload)
}
func (o *CreateCorrelationForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateCorrelationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCorrelationNotFound creates a CreateCorrelationNotFound with default headers values
func NewCreateCorrelationNotFound() *CreateCorrelationNotFound {
	return &CreateCorrelationNotFound{}
}

/*
CreateCorrelationNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type CreateCorrelationNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateCorrelationNotFound) Error() string {
	return fmt.Sprintf("[POST /datasources/uid/{sourceUID}/correlations][%d] createCorrelationNotFound  %+v", 404, o.Payload)
}
func (o *CreateCorrelationNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateCorrelationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCorrelationInternalServerError creates a CreateCorrelationInternalServerError with default headers values
func NewCreateCorrelationInternalServerError() *CreateCorrelationInternalServerError {
	return &CreateCorrelationInternalServerError{}
}

/*
CreateCorrelationInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type CreateCorrelationInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateCorrelationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /datasources/uid/{sourceUID}/correlations][%d] createCorrelationInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateCorrelationInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateCorrelationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
