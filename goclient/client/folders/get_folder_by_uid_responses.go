// Code generated by go-swagger; DO NOT EDIT.

package folders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// GetFolderByUIDReader is a Reader for the GetFolderByUID structure.
type GetFolderByUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFolderByUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFolderByUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFolderByUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFolderByUIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFolderByUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFolderByUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFolderByUIDOK creates a GetFolderByUIDOK with default headers values
func NewGetFolderByUIDOK() *GetFolderByUIDOK {
	return &GetFolderByUIDOK{}
}

/*
GetFolderByUIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetFolderByUIDOK struct {
	Payload *models.Folder
}

func (o *GetFolderByUIDOK) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_uid}][%d] getFolderByUidOK  %+v", 200, o.Payload)
}
func (o *GetFolderByUIDOK) GetPayload() *models.Folder {
	return o.Payload
}

func (o *GetFolderByUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Folder)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderByUIDUnauthorized creates a GetFolderByUIDUnauthorized with default headers values
func NewGetFolderByUIDUnauthorized() *GetFolderByUIDUnauthorized {
	return &GetFolderByUIDUnauthorized{}
}

/*
GetFolderByUIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetFolderByUIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetFolderByUIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_uid}][%d] getFolderByUidUnauthorized  %+v", 401, o.Payload)
}
func (o *GetFolderByUIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetFolderByUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderByUIDForbidden creates a GetFolderByUIDForbidden with default headers values
func NewGetFolderByUIDForbidden() *GetFolderByUIDForbidden {
	return &GetFolderByUIDForbidden{}
}

/*
GetFolderByUIDForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetFolderByUIDForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetFolderByUIDForbidden) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_uid}][%d] getFolderByUidForbidden  %+v", 403, o.Payload)
}
func (o *GetFolderByUIDForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetFolderByUIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderByUIDNotFound creates a GetFolderByUIDNotFound with default headers values
func NewGetFolderByUIDNotFound() *GetFolderByUIDNotFound {
	return &GetFolderByUIDNotFound{}
}

/*
GetFolderByUIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetFolderByUIDNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetFolderByUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_uid}][%d] getFolderByUidNotFound  %+v", 404, o.Payload)
}
func (o *GetFolderByUIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetFolderByUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFolderByUIDInternalServerError creates a GetFolderByUIDInternalServerError with default headers values
func NewGetFolderByUIDInternalServerError() *GetFolderByUIDInternalServerError {
	return &GetFolderByUIDInternalServerError{}
}

/*
GetFolderByUIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetFolderByUIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetFolderByUIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /folders/{folder_uid}][%d] getFolderByUidInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFolderByUIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetFolderByUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
