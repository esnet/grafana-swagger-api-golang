// Code generated by go-swagger; DO NOT EDIT.

package dashboard_permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetDashboardPermissionsListByUIDReader is a Reader for the GetDashboardPermissionsListByUID structure.
type GetDashboardPermissionsListByUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDashboardPermissionsListByUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDashboardPermissionsListByUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDashboardPermissionsListByUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDashboardPermissionsListByUIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDashboardPermissionsListByUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDashboardPermissionsListByUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDashboardPermissionsListByUIDOK creates a GetDashboardPermissionsListByUIDOK with default headers values
func NewGetDashboardPermissionsListByUIDOK() *GetDashboardPermissionsListByUIDOK {
	return &GetDashboardPermissionsListByUIDOK{}
}

/*
GetDashboardPermissionsListByUIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetDashboardPermissionsListByUIDOK struct {
	Payload []*models.DashboardACLInfoDTO
}

func (o *GetDashboardPermissionsListByUIDOK) Error() string {
	return fmt.Sprintf("[GET /dashboards/uid/{uid}/permissions][%d] getDashboardPermissionsListByUidOK  %+v", 200, o.Payload)
}
func (o *GetDashboardPermissionsListByUIDOK) GetPayload() []*models.DashboardACLInfoDTO {
	return o.Payload
}

func (o *GetDashboardPermissionsListByUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByUIDUnauthorized creates a GetDashboardPermissionsListByUIDUnauthorized with default headers values
func NewGetDashboardPermissionsListByUIDUnauthorized() *GetDashboardPermissionsListByUIDUnauthorized {
	return &GetDashboardPermissionsListByUIDUnauthorized{}
}

/*
GetDashboardPermissionsListByUIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetDashboardPermissionsListByUIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByUIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dashboards/uid/{uid}/permissions][%d] getDashboardPermissionsListByUidUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDashboardPermissionsListByUIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByUIDForbidden creates a GetDashboardPermissionsListByUIDForbidden with default headers values
func NewGetDashboardPermissionsListByUIDForbidden() *GetDashboardPermissionsListByUIDForbidden {
	return &GetDashboardPermissionsListByUIDForbidden{}
}

/*
GetDashboardPermissionsListByUIDForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetDashboardPermissionsListByUIDForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByUIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dashboards/uid/{uid}/permissions][%d] getDashboardPermissionsListByUidForbidden  %+v", 403, o.Payload)
}
func (o *GetDashboardPermissionsListByUIDForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByUIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByUIDNotFound creates a GetDashboardPermissionsListByUIDNotFound with default headers values
func NewGetDashboardPermissionsListByUIDNotFound() *GetDashboardPermissionsListByUIDNotFound {
	return &GetDashboardPermissionsListByUIDNotFound{}
}

/*
GetDashboardPermissionsListByUIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetDashboardPermissionsListByUIDNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dashboards/uid/{uid}/permissions][%d] getDashboardPermissionsListByUidNotFound  %+v", 404, o.Payload)
}
func (o *GetDashboardPermissionsListByUIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByUIDInternalServerError creates a GetDashboardPermissionsListByUIDInternalServerError with default headers values
func NewGetDashboardPermissionsListByUIDInternalServerError() *GetDashboardPermissionsListByUIDInternalServerError {
	return &GetDashboardPermissionsListByUIDInternalServerError{}
}

/*
GetDashboardPermissionsListByUIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetDashboardPermissionsListByUIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByUIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dashboards/uid/{uid}/permissions][%d] getDashboardPermissionsListByUidInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDashboardPermissionsListByUIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
