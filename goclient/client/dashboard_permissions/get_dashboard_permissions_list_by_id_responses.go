// Code generated by go-swagger; DO NOT EDIT.

package dashboard_permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetDashboardPermissionsListByIDReader is a Reader for the GetDashboardPermissionsListByID structure.
type GetDashboardPermissionsListByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDashboardPermissionsListByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDashboardPermissionsListByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDashboardPermissionsListByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDashboardPermissionsListByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDashboardPermissionsListByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDashboardPermissionsListByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDashboardPermissionsListByIDOK creates a GetDashboardPermissionsListByIDOK with default headers values
func NewGetDashboardPermissionsListByIDOK() *GetDashboardPermissionsListByIDOK {
	return &GetDashboardPermissionsListByIDOK{}
}

/*
GetDashboardPermissionsListByIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetDashboardPermissionsListByIDOK struct {
	Payload []*models.DashboardACLInfoDTO
}

func (o *GetDashboardPermissionsListByIDOK) Error() string {
	return fmt.Sprintf("[GET /dashboards/id/{DashboardID}/permissions][%d] getDashboardPermissionsListByIdOK  %+v", 200, o.Payload)
}
func (o *GetDashboardPermissionsListByIDOK) GetPayload() []*models.DashboardACLInfoDTO {
	return o.Payload
}

func (o *GetDashboardPermissionsListByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByIDUnauthorized creates a GetDashboardPermissionsListByIDUnauthorized with default headers values
func NewGetDashboardPermissionsListByIDUnauthorized() *GetDashboardPermissionsListByIDUnauthorized {
	return &GetDashboardPermissionsListByIDUnauthorized{}
}

/*
GetDashboardPermissionsListByIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetDashboardPermissionsListByIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /dashboards/id/{DashboardID}/permissions][%d] getDashboardPermissionsListByIdUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDashboardPermissionsListByIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByIDForbidden creates a GetDashboardPermissionsListByIDForbidden with default headers values
func NewGetDashboardPermissionsListByIDForbidden() *GetDashboardPermissionsListByIDForbidden {
	return &GetDashboardPermissionsListByIDForbidden{}
}

/*
GetDashboardPermissionsListByIDForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetDashboardPermissionsListByIDForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /dashboards/id/{DashboardID}/permissions][%d] getDashboardPermissionsListByIdForbidden  %+v", 403, o.Payload)
}
func (o *GetDashboardPermissionsListByIDForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByIDNotFound creates a GetDashboardPermissionsListByIDNotFound with default headers values
func NewGetDashboardPermissionsListByIDNotFound() *GetDashboardPermissionsListByIDNotFound {
	return &GetDashboardPermissionsListByIDNotFound{}
}

/*
GetDashboardPermissionsListByIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetDashboardPermissionsListByIDNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /dashboards/id/{DashboardID}/permissions][%d] getDashboardPermissionsListByIdNotFound  %+v", 404, o.Payload)
}
func (o *GetDashboardPermissionsListByIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDashboardPermissionsListByIDInternalServerError creates a GetDashboardPermissionsListByIDInternalServerError with default headers values
func NewGetDashboardPermissionsListByIDInternalServerError() *GetDashboardPermissionsListByIDInternalServerError {
	return &GetDashboardPermissionsListByIDInternalServerError{}
}

/*
GetDashboardPermissionsListByIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetDashboardPermissionsListByIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetDashboardPermissionsListByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /dashboards/id/{DashboardID}/permissions][%d] getDashboardPermissionsListByIdInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDashboardPermissionsListByIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetDashboardPermissionsListByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
