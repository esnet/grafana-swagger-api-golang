// Code generated by go-swagger; DO NOT EDIT.

package admin_provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// AdminProvisioningReloadDatasourcesReader is a Reader for the AdminProvisioningReloadDatasources structure.
type AdminProvisioningReloadDatasourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminProvisioningReloadDatasourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminProvisioningReloadDatasourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAdminProvisioningReloadDatasourcesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminProvisioningReloadDatasourcesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminProvisioningReloadDatasourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminProvisioningReloadDatasourcesOK creates a AdminProvisioningReloadDatasourcesOK with default headers values
func NewAdminProvisioningReloadDatasourcesOK() *AdminProvisioningReloadDatasourcesOK {
	return &AdminProvisioningReloadDatasourcesOK{}
}

/*
AdminProvisioningReloadDatasourcesOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type AdminProvisioningReloadDatasourcesOK struct {
	Payload *models.SuccessResponseBody
}

func (o *AdminProvisioningReloadDatasourcesOK) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/datasources/reload][%d] adminProvisioningReloadDatasourcesOK  %+v", 200, o.Payload)
}
func (o *AdminProvisioningReloadDatasourcesOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDatasourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminProvisioningReloadDatasourcesUnauthorized creates a AdminProvisioningReloadDatasourcesUnauthorized with default headers values
func NewAdminProvisioningReloadDatasourcesUnauthorized() *AdminProvisioningReloadDatasourcesUnauthorized {
	return &AdminProvisioningReloadDatasourcesUnauthorized{}
}

/*
AdminProvisioningReloadDatasourcesUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type AdminProvisioningReloadDatasourcesUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminProvisioningReloadDatasourcesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/datasources/reload][%d] adminProvisioningReloadDatasourcesUnauthorized  %+v", 401, o.Payload)
}
func (o *AdminProvisioningReloadDatasourcesUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDatasourcesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminProvisioningReloadDatasourcesForbidden creates a AdminProvisioningReloadDatasourcesForbidden with default headers values
func NewAdminProvisioningReloadDatasourcesForbidden() *AdminProvisioningReloadDatasourcesForbidden {
	return &AdminProvisioningReloadDatasourcesForbidden{}
}

/*
AdminProvisioningReloadDatasourcesForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type AdminProvisioningReloadDatasourcesForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminProvisioningReloadDatasourcesForbidden) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/datasources/reload][%d] adminProvisioningReloadDatasourcesForbidden  %+v", 403, o.Payload)
}
func (o *AdminProvisioningReloadDatasourcesForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDatasourcesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminProvisioningReloadDatasourcesInternalServerError creates a AdminProvisioningReloadDatasourcesInternalServerError with default headers values
func NewAdminProvisioningReloadDatasourcesInternalServerError() *AdminProvisioningReloadDatasourcesInternalServerError {
	return &AdminProvisioningReloadDatasourcesInternalServerError{}
}

/*
AdminProvisioningReloadDatasourcesInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type AdminProvisioningReloadDatasourcesInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminProvisioningReloadDatasourcesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/datasources/reload][%d] adminProvisioningReloadDatasourcesInternalServerError  %+v", 500, o.Payload)
}
func (o *AdminProvisioningReloadDatasourcesInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDatasourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
