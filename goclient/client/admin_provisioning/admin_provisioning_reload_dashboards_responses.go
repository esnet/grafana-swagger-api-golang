// Code generated by go-swagger; DO NOT EDIT.

package admin_provisioning

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// AdminProvisioningReloadDashboardsReader is a Reader for the AdminProvisioningReloadDashboards structure.
type AdminProvisioningReloadDashboardsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AdminProvisioningReloadDashboardsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAdminProvisioningReloadDashboardsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAdminProvisioningReloadDashboardsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAdminProvisioningReloadDashboardsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAdminProvisioningReloadDashboardsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAdminProvisioningReloadDashboardsOK creates a AdminProvisioningReloadDashboardsOK with default headers values
func NewAdminProvisioningReloadDashboardsOK() *AdminProvisioningReloadDashboardsOK {
	return &AdminProvisioningReloadDashboardsOK{}
}

/*
AdminProvisioningReloadDashboardsOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type AdminProvisioningReloadDashboardsOK struct {
	Payload *models.SuccessResponseBody
}

func (o *AdminProvisioningReloadDashboardsOK) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/dashboards/reload][%d] adminProvisioningReloadDashboardsOK  %+v", 200, o.Payload)
}
func (o *AdminProvisioningReloadDashboardsOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDashboardsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminProvisioningReloadDashboardsUnauthorized creates a AdminProvisioningReloadDashboardsUnauthorized with default headers values
func NewAdminProvisioningReloadDashboardsUnauthorized() *AdminProvisioningReloadDashboardsUnauthorized {
	return &AdminProvisioningReloadDashboardsUnauthorized{}
}

/*
AdminProvisioningReloadDashboardsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type AdminProvisioningReloadDashboardsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminProvisioningReloadDashboardsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/dashboards/reload][%d] adminProvisioningReloadDashboardsUnauthorized  %+v", 401, o.Payload)
}
func (o *AdminProvisioningReloadDashboardsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDashboardsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminProvisioningReloadDashboardsForbidden creates a AdminProvisioningReloadDashboardsForbidden with default headers values
func NewAdminProvisioningReloadDashboardsForbidden() *AdminProvisioningReloadDashboardsForbidden {
	return &AdminProvisioningReloadDashboardsForbidden{}
}

/*
AdminProvisioningReloadDashboardsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type AdminProvisioningReloadDashboardsForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminProvisioningReloadDashboardsForbidden) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/dashboards/reload][%d] adminProvisioningReloadDashboardsForbidden  %+v", 403, o.Payload)
}
func (o *AdminProvisioningReloadDashboardsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDashboardsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAdminProvisioningReloadDashboardsInternalServerError creates a AdminProvisioningReloadDashboardsInternalServerError with default headers values
func NewAdminProvisioningReloadDashboardsInternalServerError() *AdminProvisioningReloadDashboardsInternalServerError {
	return &AdminProvisioningReloadDashboardsInternalServerError{}
}

/*
AdminProvisioningReloadDashboardsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type AdminProvisioningReloadDashboardsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *AdminProvisioningReloadDashboardsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /admin/provisioning/dashboards/reload][%d] adminProvisioningReloadDashboardsInternalServerError  %+v", 500, o.Payload)
}
func (o *AdminProvisioningReloadDashboardsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *AdminProvisioningReloadDashboardsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
