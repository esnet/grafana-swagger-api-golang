// Code generated by go-swagger; DO NOT EDIT.

package legacy_alerts_notification_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetAlertNotificationChannelByUIDReader is a Reader for the GetAlertNotificationChannelByUID structure.
type GetAlertNotificationChannelByUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlertNotificationChannelByUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlertNotificationChannelByUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAlertNotificationChannelByUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAlertNotificationChannelByUIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAlertNotificationChannelByUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAlertNotificationChannelByUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAlertNotificationChannelByUIDOK creates a GetAlertNotificationChannelByUIDOK with default headers values
func NewGetAlertNotificationChannelByUIDOK() *GetAlertNotificationChannelByUIDOK {
	return &GetAlertNotificationChannelByUIDOK{}
}

/*
GetAlertNotificationChannelByUIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetAlertNotificationChannelByUIDOK struct {
	Payload *models.AlertNotification
}

func (o *GetAlertNotificationChannelByUIDOK) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/uid/{notification_channel_uid}][%d] getAlertNotificationChannelByUidOK  %+v", 200, o.Payload)
}
func (o *GetAlertNotificationChannelByUIDOK) GetPayload() *models.AlertNotification {
	return o.Payload
}

func (o *GetAlertNotificationChannelByUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByUIDUnauthorized creates a GetAlertNotificationChannelByUIDUnauthorized with default headers values
func NewGetAlertNotificationChannelByUIDUnauthorized() *GetAlertNotificationChannelByUIDUnauthorized {
	return &GetAlertNotificationChannelByUIDUnauthorized{}
}

/*
GetAlertNotificationChannelByUIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetAlertNotificationChannelByUIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAlertNotificationChannelByUIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/uid/{notification_channel_uid}][%d] getAlertNotificationChannelByUidUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAlertNotificationChannelByUIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByUIDForbidden creates a GetAlertNotificationChannelByUIDForbidden with default headers values
func NewGetAlertNotificationChannelByUIDForbidden() *GetAlertNotificationChannelByUIDForbidden {
	return &GetAlertNotificationChannelByUIDForbidden{}
}

/*
GetAlertNotificationChannelByUIDForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetAlertNotificationChannelByUIDForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAlertNotificationChannelByUIDForbidden) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/uid/{notification_channel_uid}][%d] getAlertNotificationChannelByUidForbidden  %+v", 403, o.Payload)
}
func (o *GetAlertNotificationChannelByUIDForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByUIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByUIDNotFound creates a GetAlertNotificationChannelByUIDNotFound with default headers values
func NewGetAlertNotificationChannelByUIDNotFound() *GetAlertNotificationChannelByUIDNotFound {
	return &GetAlertNotificationChannelByUIDNotFound{}
}

/*
GetAlertNotificationChannelByUIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetAlertNotificationChannelByUIDNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAlertNotificationChannelByUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/uid/{notification_channel_uid}][%d] getAlertNotificationChannelByUidNotFound  %+v", 404, o.Payload)
}
func (o *GetAlertNotificationChannelByUIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertNotificationChannelByUIDInternalServerError creates a GetAlertNotificationChannelByUIDInternalServerError with default headers values
func NewGetAlertNotificationChannelByUIDInternalServerError() *GetAlertNotificationChannelByUIDInternalServerError {
	return &GetAlertNotificationChannelByUIDInternalServerError{}
}

/*
GetAlertNotificationChannelByUIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetAlertNotificationChannelByUIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAlertNotificationChannelByUIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /alert-notifications/uid/{notification_channel_uid}][%d] getAlertNotificationChannelByUidInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAlertNotificationChannelByUIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAlertNotificationChannelByUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
