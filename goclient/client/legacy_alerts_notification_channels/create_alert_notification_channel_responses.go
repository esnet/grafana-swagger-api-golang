// Code generated by go-swagger; DO NOT EDIT.

package legacy_alerts_notification_channels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// CreateAlertNotificationChannelReader is a Reader for the CreateAlertNotificationChannel structure.
type CreateAlertNotificationChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAlertNotificationChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAlertNotificationChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateAlertNotificationChannelUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAlertNotificationChannelForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateAlertNotificationChannelConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAlertNotificationChannelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateAlertNotificationChannelOK creates a CreateAlertNotificationChannelOK with default headers values
func NewCreateAlertNotificationChannelOK() *CreateAlertNotificationChannelOK {
	return &CreateAlertNotificationChannelOK{}
}

/*
CreateAlertNotificationChannelOK describes a response with status code 200, with default header values.

(empty)
*/
type CreateAlertNotificationChannelOK struct {
	Payload *models.AlertNotification
}

func (o *CreateAlertNotificationChannelOK) Error() string {
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelOK  %+v", 200, o.Payload)
}
func (o *CreateAlertNotificationChannelOK) GetPayload() *models.AlertNotification {
	return o.Payload
}

func (o *CreateAlertNotificationChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AlertNotification)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelUnauthorized creates a CreateAlertNotificationChannelUnauthorized with default headers values
func NewCreateAlertNotificationChannelUnauthorized() *CreateAlertNotificationChannelUnauthorized {
	return &CreateAlertNotificationChannelUnauthorized{}
}

/*
CreateAlertNotificationChannelUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type CreateAlertNotificationChannelUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateAlertNotificationChannelUnauthorized) Error() string {
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateAlertNotificationChannelUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelForbidden creates a CreateAlertNotificationChannelForbidden with default headers values
func NewCreateAlertNotificationChannelForbidden() *CreateAlertNotificationChannelForbidden {
	return &CreateAlertNotificationChannelForbidden{}
}

/*
CreateAlertNotificationChannelForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type CreateAlertNotificationChannelForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateAlertNotificationChannelForbidden) Error() string {
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelForbidden  %+v", 403, o.Payload)
}
func (o *CreateAlertNotificationChannelForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelConflict creates a CreateAlertNotificationChannelConflict with default headers values
func NewCreateAlertNotificationChannelConflict() *CreateAlertNotificationChannelConflict {
	return &CreateAlertNotificationChannelConflict{}
}

/*
CreateAlertNotificationChannelConflict describes a response with status code 409, with default header values.

ConflictError
*/
type CreateAlertNotificationChannelConflict struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateAlertNotificationChannelConflict) Error() string {
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelConflict  %+v", 409, o.Payload)
}
func (o *CreateAlertNotificationChannelConflict) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAlertNotificationChannelInternalServerError creates a CreateAlertNotificationChannelInternalServerError with default headers values
func NewCreateAlertNotificationChannelInternalServerError() *CreateAlertNotificationChannelInternalServerError {
	return &CreateAlertNotificationChannelInternalServerError{}
}

/*
CreateAlertNotificationChannelInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type CreateAlertNotificationChannelInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *CreateAlertNotificationChannelInternalServerError) Error() string {
	return fmt.Sprintf("[POST /alert-notifications][%d] createAlertNotificationChannelInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateAlertNotificationChannelInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *CreateAlertNotificationChannelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
