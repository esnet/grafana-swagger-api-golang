// Code generated by go-swagger; DO NOT EDIT.

package signed_in_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetSignedInUserOrgListReader is a Reader for the GetSignedInUserOrgList structure.
type GetSignedInUserOrgListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSignedInUserOrgListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSignedInUserOrgListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSignedInUserOrgListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSignedInUserOrgListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSignedInUserOrgListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSignedInUserOrgListOK creates a GetSignedInUserOrgListOK with default headers values
func NewGetSignedInUserOrgListOK() *GetSignedInUserOrgListOK {
	return &GetSignedInUserOrgListOK{}
}

/*
GetSignedInUserOrgListOK describes a response with status code 200, with default header values.

(empty)
*/
type GetSignedInUserOrgListOK struct {
	Payload []*models.UserOrgDTO
}

func (o *GetSignedInUserOrgListOK) Error() string {
	return fmt.Sprintf("[GET /user/orgs][%d] getSignedInUserOrgListOK  %+v", 200, o.Payload)
}
func (o *GetSignedInUserOrgListOK) GetPayload() []*models.UserOrgDTO {
	return o.Payload
}

func (o *GetSignedInUserOrgListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSignedInUserOrgListUnauthorized creates a GetSignedInUserOrgListUnauthorized with default headers values
func NewGetSignedInUserOrgListUnauthorized() *GetSignedInUserOrgListUnauthorized {
	return &GetSignedInUserOrgListUnauthorized{}
}

/*
GetSignedInUserOrgListUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetSignedInUserOrgListUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetSignedInUserOrgListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/orgs][%d] getSignedInUserOrgListUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSignedInUserOrgListUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetSignedInUserOrgListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSignedInUserOrgListForbidden creates a GetSignedInUserOrgListForbidden with default headers values
func NewGetSignedInUserOrgListForbidden() *GetSignedInUserOrgListForbidden {
	return &GetSignedInUserOrgListForbidden{}
}

/*
GetSignedInUserOrgListForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetSignedInUserOrgListForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetSignedInUserOrgListForbidden) Error() string {
	return fmt.Sprintf("[GET /user/orgs][%d] getSignedInUserOrgListForbidden  %+v", 403, o.Payload)
}
func (o *GetSignedInUserOrgListForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetSignedInUserOrgListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSignedInUserOrgListInternalServerError creates a GetSignedInUserOrgListInternalServerError with default headers values
func NewGetSignedInUserOrgListInternalServerError() *GetSignedInUserOrgListInternalServerError {
	return &GetSignedInUserOrgListInternalServerError{}
}

/*
GetSignedInUserOrgListInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetSignedInUserOrgListInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetSignedInUserOrgListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/orgs][%d] getSignedInUserOrgListInternalServerError  %+v", 500, o.Payload)
}
func (o *GetSignedInUserOrgListInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetSignedInUserOrgListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
