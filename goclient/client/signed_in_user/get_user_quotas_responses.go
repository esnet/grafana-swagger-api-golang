// Code generated by go-swagger; DO NOT EDIT.

package signed_in_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetUserQuotasReader is a Reader for the GetUserQuotas structure.
type GetUserQuotasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserQuotasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserQuotasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserQuotasUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserQuotasForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserQuotasNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserQuotasInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserQuotasOK creates a GetUserQuotasOK with default headers values
func NewGetUserQuotasOK() *GetUserQuotasOK {
	return &GetUserQuotasOK{}
}

/*
GetUserQuotasOK describes a response with status code 200, with default header values.

(empty)
*/
type GetUserQuotasOK struct {
	Payload []*models.UserQuotaDTO
}

func (o *GetUserQuotasOK) Error() string {
	return fmt.Sprintf("[GET /user/quotas][%d] getUserQuotasOK  %+v", 200, o.Payload)
}
func (o *GetUserQuotasOK) GetPayload() []*models.UserQuotaDTO {
	return o.Payload
}

func (o *GetUserQuotasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserQuotasUnauthorized creates a GetUserQuotasUnauthorized with default headers values
func NewGetUserQuotasUnauthorized() *GetUserQuotasUnauthorized {
	return &GetUserQuotasUnauthorized{}
}

/*
GetUserQuotasUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetUserQuotasUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserQuotasUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/quotas][%d] getUserQuotasUnauthorized  %+v", 401, o.Payload)
}
func (o *GetUserQuotasUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserQuotasUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserQuotasForbidden creates a GetUserQuotasForbidden with default headers values
func NewGetUserQuotasForbidden() *GetUserQuotasForbidden {
	return &GetUserQuotasForbidden{}
}

/*
GetUserQuotasForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetUserQuotasForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserQuotasForbidden) Error() string {
	return fmt.Sprintf("[GET /user/quotas][%d] getUserQuotasForbidden  %+v", 403, o.Payload)
}
func (o *GetUserQuotasForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserQuotasForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserQuotasNotFound creates a GetUserQuotasNotFound with default headers values
func NewGetUserQuotasNotFound() *GetUserQuotasNotFound {
	return &GetUserQuotasNotFound{}
}

/*
GetUserQuotasNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetUserQuotasNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserQuotasNotFound) Error() string {
	return fmt.Sprintf("[GET /user/quotas][%d] getUserQuotasNotFound  %+v", 404, o.Payload)
}
func (o *GetUserQuotasNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserQuotasNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserQuotasInternalServerError creates a GetUserQuotasInternalServerError with default headers values
func NewGetUserQuotasInternalServerError() *GetUserQuotasInternalServerError {
	return &GetUserQuotasInternalServerError{}
}

/*
GetUserQuotasInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetUserQuotasInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetUserQuotasInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user/quotas][%d] getUserQuotasInternalServerError  %+v", 500, o.Payload)
}
func (o *GetUserQuotasInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetUserQuotasInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
