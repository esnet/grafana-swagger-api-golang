// Code generated by go-swagger; DO NOT EDIT.

package signed_in_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// RevokeUserAuthTokenReader is a Reader for the RevokeUserAuthToken structure.
type RevokeUserAuthTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeUserAuthTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeUserAuthTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeUserAuthTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeUserAuthTokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeUserAuthTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRevokeUserAuthTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeUserAuthTokenOK creates a RevokeUserAuthTokenOK with default headers values
func NewRevokeUserAuthTokenOK() *RevokeUserAuthTokenOK {
	return &RevokeUserAuthTokenOK{}
}

/*
RevokeUserAuthTokenOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type RevokeUserAuthTokenOK struct {
	Payload *models.SuccessResponseBody
}

func (o *RevokeUserAuthTokenOK) Error() string {
	return fmt.Sprintf("[POST /user/revoke-auth-token][%d] revokeUserAuthTokenOK  %+v", 200, o.Payload)
}
func (o *RevokeUserAuthTokenOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *RevokeUserAuthTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeUserAuthTokenBadRequest creates a RevokeUserAuthTokenBadRequest with default headers values
func NewRevokeUserAuthTokenBadRequest() *RevokeUserAuthTokenBadRequest {
	return &RevokeUserAuthTokenBadRequest{}
}

/*
RevokeUserAuthTokenBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type RevokeUserAuthTokenBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *RevokeUserAuthTokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /user/revoke-auth-token][%d] revokeUserAuthTokenBadRequest  %+v", 400, o.Payload)
}
func (o *RevokeUserAuthTokenBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *RevokeUserAuthTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeUserAuthTokenUnauthorized creates a RevokeUserAuthTokenUnauthorized with default headers values
func NewRevokeUserAuthTokenUnauthorized() *RevokeUserAuthTokenUnauthorized {
	return &RevokeUserAuthTokenUnauthorized{}
}

/*
RevokeUserAuthTokenUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type RevokeUserAuthTokenUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *RevokeUserAuthTokenUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/revoke-auth-token][%d] revokeUserAuthTokenUnauthorized  %+v", 401, o.Payload)
}
func (o *RevokeUserAuthTokenUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *RevokeUserAuthTokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeUserAuthTokenForbidden creates a RevokeUserAuthTokenForbidden with default headers values
func NewRevokeUserAuthTokenForbidden() *RevokeUserAuthTokenForbidden {
	return &RevokeUserAuthTokenForbidden{}
}

/*
RevokeUserAuthTokenForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type RevokeUserAuthTokenForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *RevokeUserAuthTokenForbidden) Error() string {
	return fmt.Sprintf("[POST /user/revoke-auth-token][%d] revokeUserAuthTokenForbidden  %+v", 403, o.Payload)
}
func (o *RevokeUserAuthTokenForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *RevokeUserAuthTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeUserAuthTokenInternalServerError creates a RevokeUserAuthTokenInternalServerError with default headers values
func NewRevokeUserAuthTokenInternalServerError() *RevokeUserAuthTokenInternalServerError {
	return &RevokeUserAuthTokenInternalServerError{}
}

/*
RevokeUserAuthTokenInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type RevokeUserAuthTokenInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *RevokeUserAuthTokenInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/revoke-auth-token][%d] revokeUserAuthTokenInternalServerError  %+v", 500, o.Payload)
}
func (o *RevokeUserAuthTokenInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *RevokeUserAuthTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
