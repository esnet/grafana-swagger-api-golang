// Code generated by go-swagger; DO NOT EDIT.

package signed_in_user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// StarDashboardReader is a Reader for the StarDashboard structure.
type StarDashboardReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StarDashboardReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStarDashboardOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStarDashboardBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStarDashboardUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStarDashboardForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStarDashboardInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStarDashboardOK creates a StarDashboardOK with default headers values
func NewStarDashboardOK() *StarDashboardOK {
	return &StarDashboardOK{}
}

/*
StarDashboardOK describes a response with status code 200, with default header values.

An OKResponse is returned if the request was successful.
*/
type StarDashboardOK struct {
	Payload *models.SuccessResponseBody
}

func (o *StarDashboardOK) Error() string {
	return fmt.Sprintf("[POST /user/stars/dashboard/{dashboard_id}][%d] starDashboardOK  %+v", 200, o.Payload)
}
func (o *StarDashboardOK) GetPayload() *models.SuccessResponseBody {
	return o.Payload
}

func (o *StarDashboardOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SuccessResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStarDashboardBadRequest creates a StarDashboardBadRequest with default headers values
func NewStarDashboardBadRequest() *StarDashboardBadRequest {
	return &StarDashboardBadRequest{}
}

/*
StarDashboardBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type StarDashboardBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *StarDashboardBadRequest) Error() string {
	return fmt.Sprintf("[POST /user/stars/dashboard/{dashboard_id}][%d] starDashboardBadRequest  %+v", 400, o.Payload)
}
func (o *StarDashboardBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *StarDashboardBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStarDashboardUnauthorized creates a StarDashboardUnauthorized with default headers values
func NewStarDashboardUnauthorized() *StarDashboardUnauthorized {
	return &StarDashboardUnauthorized{}
}

/*
StarDashboardUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type StarDashboardUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *StarDashboardUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user/stars/dashboard/{dashboard_id}][%d] starDashboardUnauthorized  %+v", 401, o.Payload)
}
func (o *StarDashboardUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *StarDashboardUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStarDashboardForbidden creates a StarDashboardForbidden with default headers values
func NewStarDashboardForbidden() *StarDashboardForbidden {
	return &StarDashboardForbidden{}
}

/*
StarDashboardForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type StarDashboardForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *StarDashboardForbidden) Error() string {
	return fmt.Sprintf("[POST /user/stars/dashboard/{dashboard_id}][%d] starDashboardForbidden  %+v", 403, o.Payload)
}
func (o *StarDashboardForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *StarDashboardForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStarDashboardInternalServerError creates a StarDashboardInternalServerError with default headers values
func NewStarDashboardInternalServerError() *StarDashboardInternalServerError {
	return &StarDashboardInternalServerError{}
}

/*
StarDashboardInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type StarDashboardInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *StarDashboardInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user/stars/dashboard/{dashboard_id}][%d] starDashboardInternalServerError  %+v", 500, o.Payload)
}
func (o *StarDashboardInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *StarDashboardInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
