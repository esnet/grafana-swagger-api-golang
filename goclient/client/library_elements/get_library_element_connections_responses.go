// Code generated by go-swagger; DO NOT EDIT.

package library_elements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetLibraryElementConnectionsReader is a Reader for the GetLibraryElementConnections structure.
type GetLibraryElementConnectionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLibraryElementConnectionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLibraryElementConnectionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLibraryElementConnectionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLibraryElementConnectionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLibraryElementConnectionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLibraryElementConnectionsOK creates a GetLibraryElementConnectionsOK with default headers values
func NewGetLibraryElementConnectionsOK() *GetLibraryElementConnectionsOK {
	return &GetLibraryElementConnectionsOK{}
}

/*
GetLibraryElementConnectionsOK describes a response with status code 200, with default header values.

(empty)
*/
type GetLibraryElementConnectionsOK struct {
	Payload *models.LibraryElementConnectionsResponse
}

func (o *GetLibraryElementConnectionsOK) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}/connections/][%d] getLibraryElementConnectionsOK  %+v", 200, o.Payload)
}
func (o *GetLibraryElementConnectionsOK) GetPayload() *models.LibraryElementConnectionsResponse {
	return o.Payload
}

func (o *GetLibraryElementConnectionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LibraryElementConnectionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLibraryElementConnectionsUnauthorized creates a GetLibraryElementConnectionsUnauthorized with default headers values
func NewGetLibraryElementConnectionsUnauthorized() *GetLibraryElementConnectionsUnauthorized {
	return &GetLibraryElementConnectionsUnauthorized{}
}

/*
GetLibraryElementConnectionsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetLibraryElementConnectionsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetLibraryElementConnectionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}/connections/][%d] getLibraryElementConnectionsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetLibraryElementConnectionsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetLibraryElementConnectionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLibraryElementConnectionsNotFound creates a GetLibraryElementConnectionsNotFound with default headers values
func NewGetLibraryElementConnectionsNotFound() *GetLibraryElementConnectionsNotFound {
	return &GetLibraryElementConnectionsNotFound{}
}

/*
GetLibraryElementConnectionsNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetLibraryElementConnectionsNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetLibraryElementConnectionsNotFound) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}/connections/][%d] getLibraryElementConnectionsNotFound  %+v", 404, o.Payload)
}
func (o *GetLibraryElementConnectionsNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetLibraryElementConnectionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLibraryElementConnectionsInternalServerError creates a GetLibraryElementConnectionsInternalServerError with default headers values
func NewGetLibraryElementConnectionsInternalServerError() *GetLibraryElementConnectionsInternalServerError {
	return &GetLibraryElementConnectionsInternalServerError{}
}

/*
GetLibraryElementConnectionsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetLibraryElementConnectionsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetLibraryElementConnectionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}/connections/][%d] getLibraryElementConnectionsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetLibraryElementConnectionsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetLibraryElementConnectionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
