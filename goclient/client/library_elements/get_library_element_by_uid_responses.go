// Code generated by go-swagger; DO NOT EDIT.

package library_elements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/grafana/grafana-api-golang-client/goclient/models"
)

// GetLibraryElementByUIDReader is a Reader for the GetLibraryElementByUID structure.
type GetLibraryElementByUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLibraryElementByUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLibraryElementByUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLibraryElementByUIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLibraryElementByUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLibraryElementByUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLibraryElementByUIDOK creates a GetLibraryElementByUIDOK with default headers values
func NewGetLibraryElementByUIDOK() *GetLibraryElementByUIDOK {
	return &GetLibraryElementByUIDOK{}
}

/*
GetLibraryElementByUIDOK describes a response with status code 200, with default header values.

(empty)
*/
type GetLibraryElementByUIDOK struct {
	Payload *models.LibraryElementResponse
}

func (o *GetLibraryElementByUIDOK) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}][%d] getLibraryElementByUidOK  %+v", 200, o.Payload)
}
func (o *GetLibraryElementByUIDOK) GetPayload() *models.LibraryElementResponse {
	return o.Payload
}

func (o *GetLibraryElementByUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LibraryElementResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLibraryElementByUIDUnauthorized creates a GetLibraryElementByUIDUnauthorized with default headers values
func NewGetLibraryElementByUIDUnauthorized() *GetLibraryElementByUIDUnauthorized {
	return &GetLibraryElementByUIDUnauthorized{}
}

/*
GetLibraryElementByUIDUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetLibraryElementByUIDUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetLibraryElementByUIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}][%d] getLibraryElementByUidUnauthorized  %+v", 401, o.Payload)
}
func (o *GetLibraryElementByUIDUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetLibraryElementByUIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLibraryElementByUIDNotFound creates a GetLibraryElementByUIDNotFound with default headers values
func NewGetLibraryElementByUIDNotFound() *GetLibraryElementByUIDNotFound {
	return &GetLibraryElementByUIDNotFound{}
}

/*
GetLibraryElementByUIDNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetLibraryElementByUIDNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetLibraryElementByUIDNotFound) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}][%d] getLibraryElementByUidNotFound  %+v", 404, o.Payload)
}
func (o *GetLibraryElementByUIDNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetLibraryElementByUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLibraryElementByUIDInternalServerError creates a GetLibraryElementByUIDInternalServerError with default headers values
func NewGetLibraryElementByUIDInternalServerError() *GetLibraryElementByUIDInternalServerError {
	return &GetLibraryElementByUIDInternalServerError{}
}

/*
GetLibraryElementByUIDInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetLibraryElementByUIDInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetLibraryElementByUIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /library-elements/{library_element_uid}][%d] getLibraryElementByUidInternalServerError  %+v", 500, o.Payload)
}
func (o *GetLibraryElementByUIDInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetLibraryElementByUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
