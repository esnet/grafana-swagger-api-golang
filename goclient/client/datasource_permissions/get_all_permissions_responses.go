// Code generated by go-swagger; DO NOT EDIT.

package datasource_permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// GetAllPermissionsReader is a Reader for the GetAllPermissions structure.
type GetAllPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllPermissionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllPermissionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllPermissionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllPermissionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllPermissionsOK creates a GetAllPermissionsOK with default headers values
func NewGetAllPermissionsOK() *GetAllPermissionsOK {
	return &GetAllPermissionsOK{}
}

/*
GetAllPermissionsOK describes a response with status code 200, with default header values.

(empty)
*/
type GetAllPermissionsOK struct {
	Payload *models.DataSourcePermissionsDTO
}

func (o *GetAllPermissionsOK) Error() string {
	return fmt.Sprintf("[GET /datasources/{datasourceId}/permissions][%d] getAllPermissionsOK  %+v", 200, o.Payload)
}
func (o *GetAllPermissionsOK) GetPayload() *models.DataSourcePermissionsDTO {
	return o.Payload
}

func (o *GetAllPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DataSourcePermissionsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsUnauthorized creates a GetAllPermissionsUnauthorized with default headers values
func NewGetAllPermissionsUnauthorized() *GetAllPermissionsUnauthorized {
	return &GetAllPermissionsUnauthorized{}
}

/*
GetAllPermissionsUnauthorized describes a response with status code 401, with default header values.

UnauthorizedError is returned when the request is not authenticated.
*/
type GetAllPermissionsUnauthorized struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAllPermissionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /datasources/{datasourceId}/permissions][%d] getAllPermissionsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAllPermissionsUnauthorized) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAllPermissionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsForbidden creates a GetAllPermissionsForbidden with default headers values
func NewGetAllPermissionsForbidden() *GetAllPermissionsForbidden {
	return &GetAllPermissionsForbidden{}
}

/*
GetAllPermissionsForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type GetAllPermissionsForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAllPermissionsForbidden) Error() string {
	return fmt.Sprintf("[GET /datasources/{datasourceId}/permissions][%d] getAllPermissionsForbidden  %+v", 403, o.Payload)
}
func (o *GetAllPermissionsForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAllPermissionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsNotFound creates a GetAllPermissionsNotFound with default headers values
func NewGetAllPermissionsNotFound() *GetAllPermissionsNotFound {
	return &GetAllPermissionsNotFound{}
}

/*
GetAllPermissionsNotFound describes a response with status code 404, with default header values.

NotFoundError is returned when the requested resource was not found.
*/
type GetAllPermissionsNotFound struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAllPermissionsNotFound) Error() string {
	return fmt.Sprintf("[GET /datasources/{datasourceId}/permissions][%d] getAllPermissionsNotFound  %+v", 404, o.Payload)
}
func (o *GetAllPermissionsNotFound) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAllPermissionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsInternalServerError creates a GetAllPermissionsInternalServerError with default headers values
func NewGetAllPermissionsInternalServerError() *GetAllPermissionsInternalServerError {
	return &GetAllPermissionsInternalServerError{}
}

/*
GetAllPermissionsInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type GetAllPermissionsInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *GetAllPermissionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /datasources/{datasourceId}/permissions][%d] getAllPermissionsInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAllPermissionsInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *GetAllPermissionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
