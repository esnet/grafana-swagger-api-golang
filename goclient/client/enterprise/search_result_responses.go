// Code generated by go-swagger; DO NOT EDIT.

package enterprise

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/esnet/grafana-swagger-api-golang/goclient/models"
)

// SearchResultReader is a Reader for the SearchResult structure.
type SearchResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchResultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchResultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchResultForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchResultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchResultOK creates a SearchResultOK with default headers values
func NewSearchResultOK() *SearchResultOK {
	return &SearchResultOK{}
}

/*
SearchResultOK describes a response with status code 200, with default header values.

(empty)
*/
type SearchResultOK struct {
	Payload *models.SearchResult
}

func (o *SearchResultOK) Error() string {
	return fmt.Sprintf("[POST /access-control/assignments/search][%d] searchResultOK  %+v", 200, o.Payload)
}
func (o *SearchResultOK) GetPayload() *models.SearchResult {
	return o.Payload
}

func (o *SearchResultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResultBadRequest creates a SearchResultBadRequest with default headers values
func NewSearchResultBadRequest() *SearchResultBadRequest {
	return &SearchResultBadRequest{}
}

/*
SearchResultBadRequest describes a response with status code 400, with default header values.

BadRequestError is returned when the request is invalid and it cannot be processed.
*/
type SearchResultBadRequest struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchResultBadRequest) Error() string {
	return fmt.Sprintf("[POST /access-control/assignments/search][%d] searchResultBadRequest  %+v", 400, o.Payload)
}
func (o *SearchResultBadRequest) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchResultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResultForbidden creates a SearchResultForbidden with default headers values
func NewSearchResultForbidden() *SearchResultForbidden {
	return &SearchResultForbidden{}
}

/*
SearchResultForbidden describes a response with status code 403, with default header values.

ForbiddenError is returned if the user/token has insufficient permissions to access the requested resource.
*/
type SearchResultForbidden struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchResultForbidden) Error() string {
	return fmt.Sprintf("[POST /access-control/assignments/search][%d] searchResultForbidden  %+v", 403, o.Payload)
}
func (o *SearchResultForbidden) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchResultForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchResultInternalServerError creates a SearchResultInternalServerError with default headers values
func NewSearchResultInternalServerError() *SearchResultInternalServerError {
	return &SearchResultInternalServerError{}
}

/*
SearchResultInternalServerError describes a response with status code 500, with default header values.

InternalServerError is a general error indicating something went wrong internally.
*/
type SearchResultInternalServerError struct {
	Payload *models.ErrorResponseBody
}

func (o *SearchResultInternalServerError) Error() string {
	return fmt.Sprintf("[POST /access-control/assignments/search][%d] searchResultInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchResultInternalServerError) GetPayload() *models.ErrorResponseBody {
	return o.Payload
}

func (o *SearchResultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponseBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
